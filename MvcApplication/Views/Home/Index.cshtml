<!doctype html>
<html ng-app="app">
<head>
    <title>AngularJS-WebApi-EF</title>
     
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/angular")
    @Scripts.Render("~/bundles/toastr")
    @Scripts.Render("~/bundles/bootstrap")
    @Styles.Render("~/content/bootstrap")
    @Styles.Render("~/content/toastr")
 
    <style>
        i {
            cursor: pointer;
        }
    </style>
</head>
<body>
    <div ng-controller="IndexCtrl" ng-cloak>
        <div style="width: 500px;margin:auto;">
            <table class="table table-striped table-bordered table-condensed table-hover">
                <tr>
                    <th style="width: 100px;">
                        <div class="btn-toolbar"><i class="btn icon-plus" ng-click="toggleAddMode()"></i></div>
                    </th>
                    <th style="width: 50px;">Id</th>
                    <th>Name</th>
                </tr>
                <tr ng-show="addMode">
                    <td>
                        <div class="btn-toolbar">
                            <div class="btn-group">
                                <i class="btn icon-save" ng-click="addPerson()"></i>
                                <i class="btn icon-remove" ng-click="toggleAddMode()"></i>
                            </div>
                        </div>
                    </td>
                    <td></td>
                    <td>
                        <input ng-model="person.Name" /></td>
                </tr>
                 <tbody>
                    @*<tr ng-repeat="item in pagedItems[currentPage] | orderBy:sortingOrder:reverse">*@
                    <tr ng-repeat="person in people | orderBy:'Id':true">
                    <td>
                        <div class="btn-toolbar" ng-show="person.editMode == null || person.editMode == false">
                            <div class="btn-group">
                                <i class="btn btn-default glyphicon glyphicon-edit" ng-click="toggleEditMode(person)"></i>
                                <i class="btn btn-default glyphicon glyphicon-trash" ng-click="deletePerson(person)"></i>
                            </div>
                        </div>
                        <div class="btn-toolbar" ng-show="person.editMode == true">
                            <div class="btn-group">
                                <i class="btn btn-default glyphicon glyphicon-save" ng-click="updatePerson(person)"></i>
                                <i class="btn btn-default glyphicon glyphicon-remove" ng-click="toggleEditMode(person)"></i>
                            </div>
                        </div>
                    </td>
                    <td>{{person.RowNum}}</td>
                    <td>
                        <span ng-show="person.editMode == null || person.editMode == false">{{person.ProductName}}</span>
                        <input ng-model="person.ProductName" ng-show="person.editMode == true" />
                    </td>
                </tr>
                </tbody>
                <tfoot>
                    <td colspan="6">
                        <div class="pagination pull-right">
                            <ul>
                                <li ng-class="{disabled: currentPage == 0}">
                                    <a href ng-click="prevPage()">« Prev</a>
                                </li>
                                <li ng-repeat="n in range(pagedItems.length)"
                                    ng-class="{active: n == currentPage}"
                                ng-click="setPage()">
                                    <a href ng-bind="n + 1">1</a>
                                </li>
                                <li ng-class="{disabled: currentPage == pagedItems.length - 1}">
                                    <a href ng-click="nextPage()">Next »</a>
                                </li>
                            </ul>
                        </div>
                    </td>
                </tfoot>
            </table>
        </div>
    </div>
 
    <script>
        var app = angular.module('app', []);
 
        var url = 'api/values/';
 
        app.factory('personFactory', function ($http) {
            return {
                getPeople: function () {
                    return $http.get(url);
                },
                addPerson: function (person) {
                    return $http.post(url, person);
                },
                deletePerson: function (person) {
                    return $http.delete(url + person.RowNum);
                },
                updatePerson: function (person) {
                    return $http.put(url + person.RowNum, person);
                }
            };
        });
        
        app.factory('notificationFactory', function () {
 
            return {
                success: function () {
                    toastr.success("Success");
                },
                error: function (text) {
                    toastr.error(text, "Error!");
                }
            };
        });
 
        app.controller('IndexCtrl', function ($scope, personFactory, notificationFactory) {
            $scope.people = [];
            $scope.addMode = false;
 
            $scope.toggleAddMode = function () {
                $scope.addMode = !$scope.addMode;
            };
 
            $scope.toggleEditMode = function (person) {
                person.editMode = !person.editMode;
            };
 
            var getPeopleSuccessCallback = function (data, status) {
                $scope.people = data;
            };
 
            var successCallback = function (data, status, headers, config) {
                notificationFactory.success();
 
                return personFactory.getPeople().success(getPeopleSuccessCallback).error(errorCallback);
            };
 
            var successPostCallback = function (data, status, headers, config) {
                successCallback(data, status, headers, config).success(function () {
                    $scope.toggleAddMode();
                    $scope.person = {};
                });
            };
 
            var errorCallback = function (data, status, headers, config) {
                notificationFactory.error(data.ExceptionMessage);
            };
 
 
            personFactory.getPeople().success(getPeopleSuccessCallback).error(errorCallback);
 
            $scope.addPerson = function () {
                personFactory.addPerson($scope.person).success(successPostCallback).error(errorCallback);
            };
 
            $scope.deletePerson = function (person) {
                personFactory.deletePerson(person).success(successCallback).error(errorCallback);
            };
 
            $scope.updatePerson = function (person) {
                personFactory.updatePerson(person).success(successCallback).error(errorCallback);
            };
            //paging
            $scope.groupToPages = function () {
                $scope.pagedItems = [];

                for (var i = 0; i < $scope.filteredItems.length; i++) {
                    if (i % $scope.itemsPerPage === 0) {
                        $scope.pagedItems[Math.floor(i / $scope.itemsPerPage)] = [$scope.filteredItems[i]];
                    } else {
                        $scope.pagedItems[Math.floor(i / $scope.itemsPerPage)].push($scope.filteredItems[i]);
                    }
                }
            };

            $scope.range = function (start, end) {
                var ret = [];
                if (!end) {
                    end = start;
                    start = 0;
                }
                for (var i = start; i < end; i++) {
                    ret.push(i);
                }
                return ret;
            };

            $scope.prevPage = function () {
                if ($scope.currentPage > 0) {
                    $scope.currentPage--;
                }
            };

            $scope.nextPage = function () {
                if ($scope.currentPage < $scope.pagedItems.length - 1) {
                    $scope.currentPage++;
                }
            };

            $scope.setPage = function () {
                $scope.currentPage = this.n;
            };
        });
    </script>
</body>
</html>